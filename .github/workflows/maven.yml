name: Maven CI/CD Pipeline
on:
  push:
    branches:
      - release/*
      - feature/*
  pull_request:
    branches:
      - main
    types:
      - closed
jobs:
  build:
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps: 
    - uses: actions/checkout@v4

    - name: Check for changes in Project Directory
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          src:
            - 'myapp/**'
        base: ${{ env.GITHUB_REF }}^
        ref: 'HEAD'

    - name: Set up JDK 17
      if: steps.changes.outputs.myapp == 'false'
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Move script to myapp directory
      if: steps.changes.outputs.myapp == 'false'
      run: mv ./scripts.sh ./myapp/scripts/build_functions.sh

    - name: Source build functions
      if: steps.changes.outputs.myapp == 'false'
      run: source ./scripts/build_functions.sh
      working-directory: myapp

    - name: Determine version
      if: steps.changes.outputs.myapp == 'false'
      id: determine-version
      run: source ./scripts/build_functions.sh && determine_version
      working-directory: myapp

    - name: Update POM version
      if: steps.changes.outputs.myapp == 'false'
      run: source ./scripts/build_functions.sh && update_pom_version
      working-directory: myapp

    - name: Clean, Compile, and Run Java Application
      if: steps.changes.outputs.myapp == 'false'
      run: source ./scripts/build_functions.sh && clean_compile_run
      working-directory: myapp

    - name: Build and Run Packaged Java Application
      if: steps.changes.outputs.myapp == 'false' && success()
      run: source ./scripts/build_functions.sh && build_package
      working-directory: myapp

    - name: Upload artifact
      if: steps.changes.outputs.myapp == 'false'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARTIFACT_ID }}-${{ env.VERSION }}
        path: myapp/target/${{ env.ARTIFACT_ID }}-${{ env.VERSION }}.jar

    - name: Log in to Docker Hub
      if: steps.changes.outputs.myapp == 'false'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      if: steps.changes.outputs.myapp == 'false'
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/myapp:latest
          ${{ secrets.DOCKER_USERNAME }}/myapp:${{ env.VERSION }}
        build-args: |
          BUILD_VERSION=${{ env.VERSION }}

    - name: Verify Docker image
      if: steps.changes.outputs.myapp == 'false'
      run: docker run --rm ${{ secrets.DOCKER_USERNAME }}/myapp:latest
      
    - name: No changes detected
      if: steps.changes.outputs.myapp != 'true'
      run: echo "No changes were made in myapp/src/main/*, hence no artifact was uploaded or Docker image was built."